
// server <=> client
// The First Message client send to server
message TimeSync {
    required int64 client = 1;  // UTC timestamp in milliseconds
    required int64 server = 2;
}

// client => server
// The Second Message client send to server
// send after got server TimeSync back
message Ready {

}


message Vector2 {
    required float x = 1;
    required float y = 2;
}

// A circle on the screen.
// One Player can have many Units (split)
message Unit {
    enum UnitStatus {
        Idle = 1;
        Move = 2;
        Jump = 3;
    }

    required string id = 1;
    required Vector2 pos = 2;
    required Vector2 towards = 3;  // mutilpled with speed
    required UnitStatus status = 4;

    optional string name = 5;
    optional float size = 6;
    optional int32 color = 7;
}


// client <=> server
// **NOTE** UnitAdd are broadcast to all clients immediately
// No need waiting for server tick
message UnitAdd {
    repeated Unit units = 1;
}

// client => server
message UnitRemove {
    repeated string ids = 1;
}


// client => server
message UnitUpdate {
    required int64 milliseconds = 1;    // server based
    repeated Unit units = 2;
}


message Dot {
    required string id = 1;
    required Vector2 pos = 2;
}

// server => client
message DotAdd {
    repeated Dot dots = 1;
}


// client => server
message DotRemove {
    repeated string ids = 1;
}


// server => client
// server tick
message SceneSync {
    required UnitUpdate unit_updates = 1;
    optional UnitRemove unit_removes = 2;
    optional DotAdd dot_adds = 3;
    optional DotRemove dot_removes = 4;
}


// Communication
// 1. client join server.
// 2. client send TimeSync to sync time, and server send TimeSync back.
// 3. client send Ready to server. After got TimeSync.
// 4. server join this client to room. and will send SceneSync at next tick time.
// 5. client got SceneSync. and wating User Input name.
// 6. client got name, and send UnitAdd to server.
// 7. server broadcast this message immediately.
// 8. client send UnitUpdate/UnitRemove/DotRemove to server
// 9. server sync this change in next server tick



